{"ast":null,"code":"class GithubAPICore {\n  constructor(token, user) {\n    this.auth = {\n      Authorization: \"\"\n    };\n    this.methods = {\n      GET: {\n        method: \"GET\"\n      },\n      POST: {\n        method: \"POST\"\n      }\n    };\n    this.auth.Authorization = token;\n    this.user = user;\n  }\n\n  async getRepos() {\n    // const promise = await fetch(\"https://api.github.com/users/\" + this.user + \"/repos\", this.methods.GET);\n    const promise = await fetch(`https://api.github.com/users/${this.user}/repos`, this.methods.GET);\n    return promise.json();\n  }\n\n  async getCommits(repository) {\n    // const promise = await fetch(\"https://api.github.com/repos/LoweloDev/\" + repository + \"/commits\", this.methods.GET);\n    const promise = await fetch(`https://api.github.com/repos/${this.user}/${repository}/commits`, this.methods.GET);\n    return promise.json();\n  }\n\n  async getLatestCommitOfBranch(repository, branch) {\n    const promise = await fetch(`https://api.github.com/repos/${this.user}/${repository}/commits/${branch}`, this.methods.GET);\n    return promise.json();\n  }\n\n  async getFileTree(repository) {\n    const latestCommit = await this.getLatestCommitOfBranch(repository, \"university_protected\");\n    const latestCommitSha = latestCommit.commit.tree.sha; // https://api.github.com/repos/{username}/{repoName}/trees/{latestCommitSha}\n\n    const promise = await fetch(`https://api.github.com/repos/${this.user}/${repository}/git/trees/${latestCommitSha}`, this.methods.GET);\n    return promise.json();\n  }\n\n  async getContents(repository, path) {\n    const promise = await fetch(`https://api.github.com/repos/${this.user}/${repository}/contents/${path}`, this.methods.GET);\n    return promise.json();\n  }\n\n}\n\nexport default GithubAPICore;","map":{"version":3,"sources":["/home/lowelodev/IdeaProjects/StudentHub/src/StudentHub/GithubAPICore.js"],"names":["GithubAPICore","constructor","token","user","auth","Authorization","methods","GET","method","POST","getRepos","promise","fetch","json","getCommits","repository","getLatestCommitOfBranch","branch","getFileTree","latestCommit","latestCommitSha","commit","tree","sha","getContents","path"],"mappings":"AAAA,MAAMA,aAAN,CAAoB;AAYhBC,EAAAA,WAAW,CAACC,KAAD,EAAQC,IAAR,EAAc;AAAA,SAVzBC,IAUyB,GAVlB;AAACC,MAAAA,aAAa,EAAE;AAAhB,KAUkB;AAAA,SATzBC,OASyB,GATf;AACNC,MAAAA,GAAG,EAAE;AACDC,QAAAA,MAAM,EAAE;AADP,OADC;AAINC,MAAAA,IAAI,EAAE;AACFD,QAAAA,MAAM,EAAE;AADN;AAJA,KASe;AACrB,SAAKJ,IAAL,CAAUC,aAAV,GAA0BH,KAA1B;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACH;;AAEa,QAARO,QAAQ,GAAG;AACb;AACA,UAAMC,OAAO,GAAG,MAAMC,KAAK,CAAE,gCAA+B,KAAKT,IAAK,QAA3C,EAAoD,KAAKG,OAAL,CAAaC,GAAjE,CAA3B;AAEA,WAAOI,OAAO,CAACE,IAAR,EAAP;AACH;;AAEe,QAAVC,UAAU,CAACC,UAAD,EAAa;AACzB;AACA,UAAMJ,OAAO,GAAG,MAAMC,KAAK,CAAE,gCAA+B,KAAKT,IAAK,IAAGY,UAAW,UAAzD,EAAoE,KAAKT,OAAL,CAAaC,GAAjF,CAA3B;AAEA,WAAOI,OAAO,CAACE,IAAR,EAAP;AACH;;AAE4B,QAAvBG,uBAAuB,CAACD,UAAD,EAAaE,MAAb,EAAqB;AAC9C,UAAMN,OAAO,GAAG,MAAMC,KAAK,CAAE,gCAA+B,KAAKT,IAAK,IAAGY,UAAW,YAAWE,MAAO,EAA3E,EAA8E,KAAKX,OAAL,CAAaC,GAA3F,CAA3B;AAEA,WAAOI,OAAO,CAACE,IAAR,EAAP;AACH;;AAEgB,QAAXK,WAAW,CAACH,UAAD,EAAa;AAC1B,UAAMI,YAAY,GAAG,MAAM,KAAKH,uBAAL,CAA6BD,UAA7B,EAAyC,sBAAzC,CAA3B;AACA,UAAMK,eAAe,GAAGD,YAAY,CAACE,MAAb,CAAoBC,IAApB,CAAyBC,GAAjD,CAF0B,CAI1B;;AACA,UAAMZ,OAAO,GAAG,MAAMC,KAAK,CAAE,gCAA+B,KAAKT,IAAK,IAAGY,UAAW,cAAaK,eAAgB,EAAtF,EAAyF,KAAKd,OAAL,CAAaC,GAAtG,CAA3B;AAEA,WAAOI,OAAO,CAACE,IAAR,EAAP;AACH;;AAEgB,QAAXW,WAAW,CAACT,UAAD,EAAaU,IAAb,EAAmB;AAChC,UAAMd,OAAO,GAAG,MAAMC,KAAK,CAAE,gCAA+B,KAAKT,IAAK,IAAGY,UAAW,aAAYU,IAAK,EAA1E,EAA6E,KAAKnB,OAAL,CAAaC,GAA1F,CAA3B;AAEA,WAAOI,OAAO,CAACE,IAAR,EAAP;AACH;;AAnDe;;AAsDpB,eAAeb,aAAf","sourcesContent":["class GithubAPICore {\n    user;\n    auth = {Authorization: \"\"};\n    methods = {\n        GET: {\n            method: \"GET\",\n        },\n        POST: {\n            method: \"POST\",\n        }\n    }\n\n    constructor(token, user) {\n        this.auth.Authorization = token;\n        this.user = user;\n    }\n\n    async getRepos() {\n        // const promise = await fetch(\"https://api.github.com/users/\" + this.user + \"/repos\", this.methods.GET);\n        const promise = await fetch(`https://api.github.com/users/${this.user}/repos`, this.methods.GET);\n\n        return promise.json();\n    }\n\n    async getCommits(repository) {\n        // const promise = await fetch(\"https://api.github.com/repos/LoweloDev/\" + repository + \"/commits\", this.methods.GET);\n        const promise = await fetch(`https://api.github.com/repos/${this.user}/${repository}/commits`, this.methods.GET);\n\n        return promise.json();\n    }\n\n    async getLatestCommitOfBranch(repository, branch) {\n        const promise = await fetch(`https://api.github.com/repos/${this.user}/${repository}/commits/${branch}`, this.methods.GET);\n\n        return promise.json();\n    }\n\n    async getFileTree(repository) {\n        const latestCommit = await this.getLatestCommitOfBranch(repository, \"university_protected\");\n        const latestCommitSha = latestCommit.commit.tree.sha;\n\n        // https://api.github.com/repos/{username}/{repoName}/trees/{latestCommitSha}\n        const promise = await fetch(`https://api.github.com/repos/${this.user}/${repository}/git/trees/${latestCommitSha}`, this.methods.GET);\n\n        return promise.json();\n    }\n\n    async getContents(repository, path) {\n        const promise = await fetch(`https://api.github.com/repos/${this.user}/${repository}/contents/${path}`, this.methods.GET);\n\n        return promise.json();\n    }\n}\n\nexport default GithubAPICore;\n"]},"metadata":{},"sourceType":"module"}