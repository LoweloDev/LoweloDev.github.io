{"version":3,"sources":["GitHubAPI/RepoAPI.js","GitHubAPI/GithubAPIProtected.js","GitHubAPI/FolderComponent.js","logo.svg","AboutMe.js","App.js","reportWebVitals.js","index.js"],"names":["RepoAPI","repository","path","a","this","getContents","promise","folders","map","item","type","name","download_url","html_url","filter","undefined","Promise","all","getFolders","result","child","token","user","auth","Authorization","methods","GET","method","fetch","json","branch","getLatestCommitOfBranch","latestCommit","latestCommitSha","commit","tree","sha","FolderComponent","getFoldersWithChild","then","setState","reduce","acc","currItem","console","log","state","List","Object","entries","value","ListItem","button","onClick","ListItemIcon","ListItemText","ListItemSecondaryAction","IconButton","href","React","Component","AboutMe","className","src","logo","alt","target","rel","App","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec6bd0db.chunk.js","sourcesContent":["import GithubAPIProtected from \"./GithubAPIProtected\";\n\nclass RepoAPI extends GithubAPIProtected {\n    async getFolders(repository, path) {\n        const promise = await this.getContents(repository, path);\n        const folders = promise\n            .map(item => {\n                if (item.type === \"dir\") {\n                    const result = {\n                        name: item.name,\n                        type: item.type,\n                        download_url: \"https://download-directory.github.io/?url=\" + item.html_url,\n                        html_url: item.html_url\n                    }\n                    return result;\n                }\n            })\n            .filter(item => item !== undefined);\n        return folders;\n    }\n\n    async getFoldersWithChild(repository, path) {\n        let folders = await this.getContents(repository, path);\n        folders = await Promise.all(folders.map(async item => {\n            if (item.type === \"dir\") {\n                const result = {\n                    name: item.name,\n                    type: item.type,\n                    html_url: item.html_url,\n                    download_url: \"https://download-directory.github.io/?url=\" + item.html_url,\n                    child: await this.getFolders(repository, item.name)\n                }\n                return result;\n            }\n        }))\n        return folders.filter(item => item !== undefined);\n    }\n}\n\nexport default RepoAPI;\n","class GithubAPIProtected {\n    user;\n    auth = {Authorization: \"\"};\n    methods = {\n        GET: {\n            method: \"GET\"\n        }\n    }\n\n    constructor(token, user) {\n        this.auth.Authorization = token;\n        this.user = user;\n    }\n\n    async getRepos() {\n        const promise = await fetch(\"https://api.github.com/users/\" + this.user + \"/repos\", this.methods.GET);\n\n        return promise.json();\n    }\n\n    async getCommits(repository) {\n        const promise = await fetch(\"https://api.github.com/repos/LoweloDev/\" + repository + \"/commits\", this.methods.GET);\n\n        return promise.json();\n    }\n\n    async getLatestCommitOfBranch(repository, branch) {\n        const promise = await fetch(\"https://api.github.com/repos/\" + this.user + \"/\" + repository + \"/commits/\" + branch, this.methods.GET);\n\n        return promise.json();\n    }\n\n    async getFileTree(repository) {\n        const latestCommit = await this.getLatestCommitOfBranch(repository, \"university_protected\");\n        const latestCommitSha = latestCommit.commit.tree.sha;\n\n        // https://api.github.com/repos/{username}/{repoName}/trees/{latestCommitSha}\n        const promise = await fetch(\"https://api.github.com/repos/\" + this.user + \"/\" + repository + \"/git/trees/\" + latestCommitSha, this.methods.GET);\n\n        return promise.json();\n    }\n\n    async getContents(repository, path) {\n        const promise = await fetch(\"https://api.github.com/repos/\" + this.user + \"/\" + repository + \"/contents/\" + path, this.methods.GET);\n\n        return promise.json();\n    }\n}\n\nexport default GithubAPIProtected;\n","import React from 'react';\nimport RepoAPI from \"./RepoAPI\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport {IconButton, ListItemSecondaryAction} from \"@material-ui/core\";\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\nclass FolderComponent extends React.Component {\n    componentWillMount() {\n        const githubrepos = new RepoAPI(\"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\", \"LoweloDev\");\n\n        githubrepos.getFoldersWithChild(\"University\", \"\")\n            .then(item => {\n                this.setState(item.reduce((acc,currItem)=> (acc[currItem.name]= currItem, acc),{}))\n                console.log(this.state[\"1. Semester\"])\n            })\n    }\n\n    render() {\n        if (this.state !== null) {\n            return (\n                <List>\n                    {Object.entries(this.state).map(([key, value]) => {\n                        return (\n                            <ListItem button onClick={ () => this.setState(this.state[value.name].child)}>\n                                <ListItemIcon>\n                                    {(value.type === \"dir\") && <FolderIcon/>}\n                                </ListItemIcon>\n                                <ListItemText>{value.name}</ListItemText>\n                                <ListItemSecondaryAction>\n                                    <IconButton href={value.download_url}>\n                                        <CloudDownloadIcon/>\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        );\n                    })}\n                </List>\n            );\n        } else {\n            return (\n                <div>Loading...</div>\n            )\n        }\n    }\n\n}\n\nexport default FolderComponent;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport React from 'react';\n\nclass AboutMe extends React.Component {\n    render() {\n        return (\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>\n                    Nothing here yet. Under construction.\n                </p>\n                <a\n                    className=\"App-link\"\n                    href=\"https://github.com/LoweloDev/\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Link to my GitHub\n                </a>\n            </header>\n        );\n    }\n}\nexport default AboutMe;","import './App.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n} from \"react-router-dom\";\nimport FolderComponent from \"./GitHubAPI/FolderComponent\";\nimport AboutMe from \"./AboutMe\";\n\n//TODO proper  with material UI and navigation (via history etc)\n// TODO cleaning up codebase and implementing the rest of basic UI\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <div className=\"testClass\">\n                <Link to=\"/about\">About Me</Link>\n                <Link to=\"/studenthub\">StudentHub</Link>\n                </div>\n                <Switch>\n                    <Route path=\"/about\">\n                        <AboutMe />\n                    </Route>\n                    <Route path=\"/studenthub\">\n                        <FolderComponent/>\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}