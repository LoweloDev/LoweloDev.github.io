{"version":3,"sources":["RepoAPI.js","GithubAPIProtected.js","FolderComponent.js","logo.svg","AboutMe.js","App.js","reportWebVitals.js","index.js"],"names":["RepoAPI","repository","a","fetch","promise","json","branch","this","user","getLatestCommitOfBranch","latestCommit","latestCommitSha","commit","tree","sha","path","getContents","folders","map","item","type","name","download_url","html_url","filter","undefined","token","auth","Authorization","methods","GET","method","headers","FolderComponent","githubrepos","getFolders","then","setState","console","log","state","Fragment","Object","entries","value","href","React","Component","AboutMe","className","src","logo","alt","target","rel","App","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91f064d7.chunk.js","sourcesContent":["import GithubAPIProtected from \"./GithubAPIProtected\";\n\nclass RepoAPI extends GithubAPIProtected {\n\n    async getCommits(repository) {\n        const promise = await fetch(\"https://api.github.com/repos/LoweloDev/\" + repository + \"/commits\");\n\n        return promise.json();\n    }\n\n    async getLatestCommitOfBranch(repository, branch) {\n        const promise = await fetch(\"https://api.github.com/repos/\" + this.user + \"/\" + repository + \"/commits/\" + branch);\n\n        return promise.json();\n    }\n\n    async getFileTree(repository) {\n        const latestCommit = await this.getLatestCommitOfBranch(repository, \"university_protected\");\n        const latestCommitSha = latestCommit.commit.tree.sha;\n\n        // https://api.github.com/repos/{username}/{repoName}/trees/{latestCommitSha}\n        const promise = await fetch(\"https://api.github.com/repos/\" + this.user + \"/\" + repository + \"/git/trees/\" + latestCommitSha);\n\n        return promise.json();\n    }\n\n    async getContents(repository, path) {\n        const promise = await fetch(\"https://api.github.com/repos/\" + this.user + \"/\" + repository + \"/contents/\" + path);\n\n        return promise.json();\n    }\n\n    async getFolders(repository, path) {\n        const promise = await this.getContents(repository, path);\n        const folders = promise\n            .map(item => {\n                if (item.type === \"dir\") {\n                    const result = {\n                        name: item.name,\n                        type: item.type,\n                        download_url: \"https://download-directory.github.io/?url=\" + item.html_url\n                    }\n                    return result;\n                }\n            })\n            .filter(item => item !== undefined);\n        return folders;\n    }\n\n    mergeToTree() {\n\n    }\n\n    // async getFileTreeByDepth(repository, path, depth) {\n    //     //TODO parent ( if null -> name), path: \"/\" + name\n    //     let fileTree = [];\n    //     let previous;\n    //\n    //     for (depth; depth > 0; depth--) {\n    //         const folders = await this.getFolders(repository, path);\n    //         folders.map( (item, index) => {\n    //             const result = {\n    //                 name: item.name,\n    //                 type: item.type,\n    //                 download_url: \"https://download-directory.github.io/?url=\" + item.html_url,\n    //                 parent: previous,\n    //                 relativePath: path + item.name,\n    //                 child: this.getFileTreeByDepth(repository, (result) ? result.relativePath : path + item.name)\n    //             }\n    //             // console.log(result.relativePath)\n    //             previous =\n    //             fileTree.push(result)\n    //         })\n    //     }\n    //     // console.log(await fileTree)\n    // }\n}\n\nexport default RepoAPI;\n","class GithubAPIProtected {\n    user;\n    auth = {Authorization: \"\"};\n    methods = {\n        GET: {\n            method: \"GET\", headers: this.auth\n        }\n    }\n\n    constructor(token, user) {\n        this.auth.Authorization = token;\n        this.user = user;\n    }\n\n    async getRepos() {\n        const promise = await fetch(\"https://api.github.com/users/\" + this.user + \"/repos\");\n\n        return promise.json();\n    }\n}\n\nexport default GithubAPIProtected;\n","import React from 'react';\nimport RepoAPI from \"./RepoAPI\";\n\nclass FolderComponent extends React.Component {\n\n    componentWillMount() {\n        const githubrepos = new RepoAPI(\"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\", \"LoweloDev\");\n\n        githubrepos.getFolders(\"University\", \"\")\n            .then(item => {\n                this.setState(item)\n            })\n        console.log(githubrepos.getContents(\"University\", \"\"));\n    }\n\n    render() {\n        if (this.state === null) {\n            return (\n                <div>Loading...</div>\n            )\n        } else {\n            return (\n                <React.Fragment>\n                    {Object.entries(this.state).map(([key, value]) => {\n                        return (\n                            <React.Fragment>\n                                <div>{value.name}</div>\n                                <div>{value.type}</div>\n                                <a href={value.download_url}>Download</a>\n                            </React.Fragment>\n                        );\n                    })}\n                </React.Fragment>);\n        }\n    }\n\n}\n\nexport default FolderComponent;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport React from 'react';\n\nclass AboutMe extends React.Component {\n    render() {\n        return (\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>\n                    Nothing here yet. Under construction.\n                </p>\n                <a\n                    className=\"App-link\"\n                    href=\"https://github.com/LoweloDev/\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Link to my GitHub\n                </a>\n            </header>\n        );\n    }\n}\nexport default AboutMe;","import './App.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n} from \"react-router-dom\";\nimport FolderComponent from \"./FolderComponent\";\nimport AboutMe from \"./AboutMe\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <div className=\"testClass\">\n                <Link to=\"/about\">About Me</Link>\n                <Link to=\"/studenthub\">StudentHub</Link>\n                </div>\n                <Switch>\n                    <Route path=\"/about\">\n                        <AboutMe />\n                    </Route>\n                    <Route path=\"/studenthub\">\n                        <FolderComponent/>\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}