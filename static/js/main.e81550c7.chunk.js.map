{"version":3,"sources":["CoreComponents/NavBarComponent.js","CoreComponents/Themes.js","logo.svg","AboutMe.js","StudentHub/DirectoryComponent.js","StudentHub/Folder.js","StudentHub/Repository.js","StudentHub/GithubAPICore.js","StudentHub/FileManagerComponent.js","CoreComponents/Routing.js","CoreComponents/AppComponent.js","reportWebVitals.js","index.js"],"names":["NavBarComponent","classes","this","props","AppBar","className","navbar","position","Tabs","value","location","pathname","Tab","label","component","RouterLink","to","React","Component","withRouter","withStyles","padding","darkTheme","createMuiTheme","palette","primary","main","contrastText","secondary","overrides","MuiTabs","indicator","background","height","MuiTab","root","color","transition","WebkitBackgroundClip","WebkitTextFillColor","AboutMe","src","logo","alt","href","target","rel","DirectoryComponent","state","console","log","jsonObj","entryName","setState","child","Object","entries","map","key","ListItem","button","onClick","openFolder","name","ListItemIcon","type","ListItemText","ListItemSecondaryAction","IconButton","download_url","List","generateListItems","Folder","html_url","Repository","repository","path","a","getContents","promise","item","filter","undefined","folders","Promise","all","getFolders","token","user","auth","Authorization","methods","GET","method","POST","fetch","json","branch","getLatestCommitOfBranch","latestCommit","latestCommitSha","commit","tree","sha","FileManagerComponent","getFoldersWithChild","then","reduce","acc","currItem","Routing","AppComponent","ThemeProvider","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e81550c7.chunk.js","sourcesContent":["import { Link as RouterLink, withRouter} from \"react-router-dom\";\nimport {AppBar, Tabs} from \"@material-ui/core\";\nimport React from \"react\";\nimport {withStyles} from '@material-ui/core/styles';\nimport Tab from '@material-ui/core/Tab';\n\nconst styles = ({\n    navbar: {\n        padding: \"1vw 1vw\",\n    }\n})\n\nclass NavBarComponent extends React.Component {\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <AppBar className={classes.navbar} position=\"fixed\">\n                <Tabs value={this.props.location.pathname} >\n                    <Tab label=\"About Me\" component={RouterLink} to=\"/about\" value=\"/about\"/>\n                    <Tab label=\"Student Hub\" component={RouterLink} to=\"/studenthub\" value=\"/studenthub\"/>\n                </Tabs>\n            </AppBar>\n        );\n    }\n}\n\nexport default withRouter((withStyles(styles)(NavBarComponent)));\n","import {createMuiTheme} from '@material-ui/core/styles';\n\nexport const darkTheme = createMuiTheme({\n\n    palette: {\n\n        primary: {\n\n            main: \"#272c34\",\n\n            contrastText: \"#eceff1\",\n\n        },\n\n        secondary: {\n\n            main: \"#eceff1\",\n\n            contrastText: \"#272c34\",\n\n        },\n    },\n\n    overrides: {\n        MuiTabs: {\n            indicator: {\n                background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n                height: \"5%\",\n            },\n        },\n        MuiTab: {\n            root: {\n                color: \"#eceff1\",\n                transition: \"all 0.2s ease-in-out\",\n                \"&:hover\": {\n                    WebkitBackgroundClip: \"text\",\n                    WebkitTextFillColor: \"transparent\",\n                    background: \"-webkit-linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\"\n                }\n            }\n        }\n\n    }\n\n});","export default __webpack_public_path__ + \"static/media/logo.e0e11fe0.svg\";","import logo from \"./logo.svg\";\nimport './construction.css';\nimport React from 'react';\n\nclass AboutMe extends React.Component {\n    render() {\n        return (\n            <div className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>\n                    Nothing here yet. Under construction.\n                </p>\n                <a\n                    className=\"App-link\"\n                    href=\"https://github.com/LoweloDev/\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Link to my GitHub\n                </a>\n            </div>\n        );\n    }\n}\nexport default AboutMe;","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport {IconButton, ListItemSecondaryAction} from \"@material-ui/core\";\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport {Link as RouterLink, withRouter} from \"react-router-dom\";\n\nclass DirectoryComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = props.state;\n        console.log(this.props)\n    }\n\n    openFolder(jsonObj, entryName) {\n        this.setState(jsonObj[entryName] && jsonObj[entryName].child);\n    }\n\n    generateListItems(jsonObj) {\n        return Object.entries(jsonObj).map(([key, value]) => {\n            return (\n                <ListItem button onClick={() => this.openFolder(this.state, key)}\n                          component={RouterLink} to={ `${this.props.location.pathname}/${value.name}`}>\n                    <ListItemIcon>\n                        {(value.type === \"dir\") && <FolderIcon/>}\n                    </ListItemIcon>\n                    <ListItemText primary={value.name} secondary={(value.type !== \"dir\") && value.type}/>\n                    <ListItemSecondaryAction>\n                        <IconButton href={value.download_url}>\n                            <CloudDownloadIcon/>\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            );\n        })\n    }\n\n    render() {\n        return (\n            <List>\n                {this.generateListItems(this.state)}\n            </List>\n        );\n    }\n\n}\n\nexport default withRouter(DirectoryComponent);","class Folder {\n    name;\n    type;\n    html_url;\n    download_url;\n    child;\n\n    constructor(name, type, html_url, download_url, child) {\n        this.name = name;\n        this.type = type;\n        this.html_url = html_url;\n        this.download_url = download_url;\n        this.child = child;\n    }\n}\n\nexport default Folder;","import GithubAPICore from \"./GithubAPICore\";\nimport Folder from \"./Folder\";\n\nclass Repository extends GithubAPICore {\n    \n    async getFolders(repository, path) {\n        const promise = await this.getContents(repository, path);\n        return promise.map(item => {\n            if (item.type === \"dir\")\n                return new Folder(item.name, item.type, item.html_url, `https://download-directory.github.io/?url=${item.html_url}`)\n            })\n            .filter(item => item !== undefined);\n    }\n\n    async getFoldersWithChild(repository, path) {\n        let folders = await this.getContents(repository, path);\n        console.log(folders)\n        folders = await Promise.all(folders.map(async item => {\n            if (item.type === \"dir\")\n                return new Folder(item.name, item.type, item.html_url, `https://download-directory.github.io/?url=${item.html_url}`, await this.getFolders(repository, item.name))\n        }))\n        return folders.filter(item => item !== undefined);\n    }\n}\n\nexport default Repository;\n","class GithubAPICore {\n    user;\n    auth = {Authorization: \"\"};\n    methods = {\n        GET: {\n            method: \"GET\",\n        },\n        POST: {\n            method: \"POST\",\n        }\n    }\n\n    constructor(token, user) {\n        this.auth.Authorization = token;\n        this.user = user;\n    }\n\n    async getRepos() {\n        // const promise = await fetch(\"https://api.github.com/users/\" + this.user + \"/repos\", this.methods.GET);\n        const promise = await fetch(`https://api.github.com/users/${this.user}/repos`, this.methods.GET);\n\n        return promise.json();\n    }\n\n    async getCommits(repository) {\n        // const promise = await fetch(\"https://api.github.com/repos/LoweloDev/\" + repository + \"/commits\", this.methods.GET);\n        const promise = await fetch(`https://api.github.com/repos/${this.user}/${repository}/commits`, this.methods.GET);\n\n        return promise.json();\n    }\n\n    async getLatestCommitOfBranch(repository, branch) {\n        const promise = await fetch(`https://api.github.com/repos/${this.user}/${repository}/commits/${branch}`, this.methods.GET);\n\n        return promise.json();\n    }\n\n    async getFileTree(repository) {\n        const latestCommit = await this.getLatestCommitOfBranch(repository, \"university_protected\");\n        const latestCommitSha = latestCommit.commit.tree.sha;\n\n        // https://api.github.com/repos/{username}/{repoName}/trees/{latestCommitSha}\n        const promise = await fetch(`https://api.github.com/repos/${this.user}/${repository}/git/trees/${latestCommitSha}`, this.methods.GET);\n\n        return promise.json();\n    }\n\n    async getContents(repository, path) {\n        const promise = await fetch(`https://api.github.com/repos/${this.user}/${repository}/contents/${path}`, this.methods.GET);\n\n        return promise.json();\n    }\n}\n\nexport default GithubAPICore;\n","import React from \"react\";\nimport DirectoryComponent from \"./DirectoryComponent\";\nimport Repository from \"./Repository\";\n\nclass FileManagerComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const git = new Repository(\"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\", \"LoweloDev\");\n\n        git.getFoldersWithChild(\"University\", \"\")\n            .then(item => {\n                this.setState(item.reduce((acc,currItem) => (acc[currItem.name]= currItem, acc),{}))\n            })\n    }\n\n    render() {\n        if (this.state !== null) {\n        return (\n            <DirectoryComponent state={this.state}/>\n        );\n        } else {\n            return <div>Loading ...</div>\n        }\n    }\n}\n\nexport default FileManagerComponent;","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport AboutMe from \"../AboutMe\";\nimport FileManagerComponent from \"../StudentHub/FileManagerComponent\";\n\nexport default class Routing extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route path=\"/about\">\n                    <AboutMe/>\n                </Route>\n                <Route path=\"/studenthub\">\n                    <FileManagerComponent/>\n                </Route>\n            </Switch>\n        );\n    }\n}\n","import React from \"react\";\nimport NavBar from \"./NavBarComponent\";\nimport {darkTheme} from \"./Themes\";\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport {BrowserRouter} from \"react-router-dom\";\nimport Routing from \"./Routing\";\n\nfunction AppComponent() {\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <BrowserRouter>\n                <NavBar/>\n                <Routing />\n            </BrowserRouter>\n        </ThemeProvider>\n    );\n}\n\nexport default AppComponent;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppComponent from './CoreComponents/AppComponent';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppComponent />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}